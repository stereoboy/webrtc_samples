apply plugin: 'com.android.application'

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")

if (localPropertiesFile.exists()) {
    localProperties.load(new FileInputStream(localPropertiesFile))
}

def webrtcDir = localProperties.getProperty("webrtc.dir")
//def webrtcJavaDir = localProperties.getProperty("webrtc.java.dir")

android {
    signingConfigs {
        release {
            storeFile file(project.findProperty('STORE_FILE'))
            storePassword project.findProperty("KEYSTORE_PASSWORD")
            keyPassword project.findProperty("KEY_PASSWORD")
            keyAlias 'ReleaseKey'
        }
    }
    compileSdkVersion 32
    ndkVersion "21.4.7075529"
//    ndkVersion "23.1.7779620"
    defaultConfig {
        applicationId = 'com.stereoboy.peer_audio_client'
        //-------------------------------------------------------------------------------------------------
        // Related Issues
        //  (1) references
        //       - https://docs.oracle.com/javase/tutorial/java/IandI/defaultmethods.html
        //       - https://developer.android.com/studio/write/java8-support
        // > Task :peer_audio_client:mergeExtDexDebug FAILED
        //AGPBI: {"kind":"error","text":"Static interface methods are only supported starting with Android N (--min-api 24): org.webrtc.VideoFrame$TextureBuffer org.webrtc.CameraSession.createTextureBufferWithModifiedTransformMatrix(org.webrtc.TextureBufferImpl, boolean, int)","sources":[{}],"tool":"D8"}
        //
        //Static interface methods are only supported starting with Android N (--min-api 24): org.webrtc.VideoFrame$TextureBuffer org.webrtc.CameraSession.createTextureBufferWithModifiedTransformMatrix(org.webrtc.TextureBufferImpl, boolean, int)
        //
        //Execution failed for task ':peer_audio_client:mergeExtDexDebug'.
        //> Could not resolve all files for configuration ':peer_audio_client:debugRuntimeClasspath'.
        //   > Failed to transform file 'libwebrtc.jar' to match attributes {artifactType=android-dex, dexing-enable-desugaring=false, dexing-is-debuggable=true, dexing-min-sdk=23, org.gradle.usage=java-runtime-jars}
        //      > Execution failed for DexingNoClasspathTransform: /home/wom/Data/webrtc_android/src/out/arm64-v8a_debug/lib.java/sdk/android/libwebrtc.jar.
        //         > Error while dexing.
        //
        //  (2)
        // > Task :peer_audio_client:mergeExtDexDebug FAILED
        //AGPBI: {"kind":"error","text":"Invoke-customs are only supported starting with Android O (--min-api 26)","sources":[{}],"tool":"D8"}
        //Invoke-customs are only supported starting with Android O (--min-api 26)
        //
        //
        //Execution failed for task ':peer_audio_client:mergeExtDexDebug'.
        //> Could not resolve all files for configuration ':peer_audio_client:debugRuntimeClasspath'.
        //   > Failed to transform file 'libwebrtc.jar' to match attributes {artifactType=android-dex, dexing-enable-desugaring=false, dexing-is-debuggable=true, dexing-min-sdk=24, org.gradle.usage=java-runtime-jars}
        //      > Execution failed for DexingNoClasspathTransform: /home/wom/Data/webrtc_android/src/out/arm64-v8a_debug/lib.java/sdk/android/libwebrtc.jar.
        //         > Error while dexing.
        //           The dependency contains Java 8 bytecode. Please enable desugaring by adding the following to build.gradle
        //           android {
        //               compileOptions {
        //                   sourceCompatibility 1.8
        //                   targetCompatibility 1.8
        //               }
        //           }
        //
        //
        // By adding the following lines, all issues are resolved.
        //           android {
        //               compileOptions {
        //                   sourceCompatibility 1.8
        //                   targetCompatibility 1.8
        //               }
        //           }
        minSdkVersion 29
        //-------------------------------------------------------------------------------------------------
        targetSdkVersion 32
        versionCode = 1
        versionName = '1.0'
        externalNativeBuild {
            cmake {
                //
                // reference: https://stackoverflow.com/questions/42715120/how-can-i-pass-specific-arguments-example-opencv-dir-to-cmake-through-gradle
                //
                arguments '-DANDROID_STL=c++_static', '-DWEBRTC_DIR='+webrtcDir.toString(), "-DCMAKE_VERBOSE_MAKEFILE=ON"
            }
        }
        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
        }
    }
    buildTypes {
        debug {
            externalNativeBuild {
                cmake {
                    arguments "-DCMAKE_BUILD_TYPE=Debug"
                }
            }
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                          'proguard-rules.pro'
            externalNativeBuild {
                cmake {
                    arguments "-DCMAKE_BUILD_TYPE=Release"
                }
            }
            signingConfig signingConfigs.release
        }
    }
    sourceSets {
        main {
            // let gradle pack the shared library into apk
//            jniLibs.srcDirs = ['../distribution/gperf/lib']
        }
    }
    externalNativeBuild {
        cmake {
            version '3.30.5'
            path 'src/main/cpp/CMakeLists.txt'
        }
    }

    //
    // to fix java error "java.lang.NoSuchMethodError: No static method metafactory"
    // references
    //  - https://developer.android.com/studio/write/java8-support
    //  - https://github.com/square/retrofit/issues/3280
    //  - https://stackoverflow.com/questions/67749283/java-lang-nosuchmethoderror-no-static-method-metafactory
    //
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
}

dependencies {
    implementation 'com.android.support:appcompat-v7:28.0.0'
    // uncomment out this one to generate lib binaries,
    // and also uncommented out the one in settings.gradle
    // after lib is generated, just comment them out again
    api project(':gen-libs')
//    implementation fileTree(dir: 'libs', include: ['*.aar', '*.jar'], exclude: [])
    debugImplementation fileTree(dir: webrtcDir.toString() + "src/out/arm64-v8a_debug/lib.java/sdk/android/", include: ['libwebrtc.jar'], exclude: [])
    releaseImplementation fileTree(dir: webrtcDir.toString() + "src/out/arm64-v8a/lib.java/sdk/android/", include: ['libwebrtc.jar'], exclude: [])
//    implementation fileTree(dir: webrtcJavaDir.toString() + "/rtc_base", include: ['base_java.jar'], exclude: [])
//    implementation files('libs/foo.jar')
}
